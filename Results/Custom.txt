model = Sequential()
        model.add(Conv2D(96, 5, input_shape=self.input_shape, strides=(1, 1), padding='valid', data_format=None,
                         dilation_rate=(1, 1), activation=None, use_bias=True, kernel_initializer='glorot_uniform',
                         bias_initializer='zeros'))
        model.add(Activation('relu'))
        model.add(MaxPooling2D(pool_size=(2, 2), padding='valid'))

        model.add(Conv2D(256, 3, strides=(1, 1), padding='valid', dilation_rate=(1, 1),
                         kernel_initializer='glorot_uniform', bias_initializer='zeros'))
        model.add(Activation('relu'))
        model.add(MaxPooling2D(pool_size=(2, 2), padding='valid'))

        model.add(Flatten())
        model.add(Dense(4096))
        model.add(Activation('relu'))
        model.add(Dense(10))
        model.add(Activation('softmax'))

        optimizer = optimizers.SGD(lr=0.01, momentum=0.0, decay=0.0, nesterov=False)
        model.compile(loss=losses.mean_squared_error, optimizer=optimizer, metrics=['mse', 'acc'])